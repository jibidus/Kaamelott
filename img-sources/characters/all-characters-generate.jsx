// List all export resolutionsvar RESOLUTIONS = [300,100,50];var TEMPLATE_NAME = 'all-characters.psd';var OUTPUT_FOLDER = '../../www/img/characters';var FOLDER_SEPARATOR = '/';app.open(getTemplateFile());var doc = app.activeDocument;var layers = doc.layerSets.getByName("Characters").layers;// Export parametersvar options = new ExportOptionsSaveForWeb();options.format = SaveDocumentType.PNG;options.PNG8 = false;options.transparency = true;options.optimized = true;    // Make all layers not visiblefor (var i = 0; i< layers.length; i++) {    var layer = layers[i];    layer.visible = false;}var nbExportedFiles = 0;// Export character one by onefor (var i = 0; i< layers.length; i++) {    var layer = layers[i];    layer.visible = true;    exportCharacter(layer.name);    layer.visible = false;}//doc.close (SaveOptions.DONOTSAVECHANGES);alert("Export finished successfully.\n"+layers.length + " characters exported in "+nbExportedFiles+" files.");function exportCharacter(name) {    // Loop on resolution    var exportFolder = Folder(doc.path+FOLDER_SEPARATOR+OUTPUT_FOLDER);    if(!exportFolder.exists) {        exportFolder.create();     }     var exportFileNamePrefix = exportFolder.path + FOLDER_SEPARATOR + exportFolder.name + FOLDER_SEPARATOR + name + "_";    var exportFileNameSuffix = ".png";// alert(exportFile.path + "/" + exportFile.name);    for (var key in data = RESOLUTIONS){        var resolution = RESOLUTIONS[key];        var exportFileName = exportFileNamePrefix + resolution + exportFileNameSuffix;        exportBySize(resolution, exportFileName);    }}function exportBySize(size, fileName) {    // Save history state (for undo later)    var savedState = doc.activeHistoryState;    doc.resizeImage(null, UnitValue(size,"px"), null, ResampleMethod.BICUBIC);    doc.exportDocument(new File(fileName), ExportType.SAVEFORWEB, options);    nbExportedFiles++;        // Undo resize    doc.activeHistoryState = savedState;}function getTemplateFile() {    var templatePath =  getFileDirectory($.fileName) + FOLDER_SEPARATOR+ TEMPLATE_NAME ;    return new File(templatePath);}function getFileDirectory(filePath) {	return filePath.substring(0, filePath.lastIndexOf(FOLDER_SEPARATOR));}